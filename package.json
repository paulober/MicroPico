{
  "name": "pico-w-go",
  "displayName": "Pico-W-Go",
  "description": "Autocompletion and a REPL console for the Raspberry Pi Pico (W).",
  "version": "2.1.2",
  "publisher": "paulober",
  "license": "SEE LICENSE IN LICENSE.md",
  "homepage": "https://github.com/paulober/Pico-W-Go/blob/main/README.md",
  "bugs": {
    "url": "https://github.com/paulober/Pico-W-Go/issues"
  },
  "repository": {
    "type": "git",
    "url": "https://github.com/paulober/Pico-W-Go"
  },
  "icon": "images/logo.png",
  "galleryBanner": {
    "color": "#ffffff",
    "theme": "light"
  },
  "engines": {
    "vscode": "^1.70.0",
    "node": ">=15.14.0"
  },
  "keywords": [
    "raspberry",
    "pi",
    "pico",
    "pico w",
    "raspberry pi pico",
    "raspberry pi pico w"
  ],
  "categories": [
    "Other"
  ],
  "activationEvents": [
    "onCommand:picowgo.initialise",
    "workspaceContains:.picowgo"
  ],
  "main": "./dist/extension.js",
  "compatibility": [
    {
      "platform": "win32",
      "arch": [
        "x64"
      ]
    },
    {
      "platform": "darwin",
      "arch": [
        "x64",
        "arm64"
      ]
    },
    {
      "platform": "linux",
      "arch": [
        "x64",
        "arm64"
      ]
    }
  ],
  "os": [
    "win32",
    "darwin",
    "linux"
  ],
  "cpu": [
    "x64",
    "arm64"
  ],
  "minimumNodeVersion": 15,
  "contributes": {
    "commands": [
      {
        "command": "picowgo.connect",
        "title": "Pico-W-Go > Connect"
      },
      {
        "command": "picowgo.disconnect",
        "title": "Pico-W-Go > Disconnect"
      },
      {
        "command": "picowgo.initialise",
        "title": "Pico-W-Go > Configure project"
      },
      {
        "command": "picowgo.upload",
        "title": "Pico-W-Go > Upload project"
      },
      {
        "command": "picowgo.uploadFile",
        "title": "Pico-W-Go > Upload current file only"
      },
      {
        "command": "picowgo.download",
        "title": "Pico-W-Go > Download project"
      },
      {
        "command": "picowgo.run",
        "title": "Pico-W-Go > Run current file"
      },
      {
        "command": "picowgo.runselection",
        "title": "Pico-W-Go > Run current selection"
      },
      {
        "command": "picowgo.deleteAllFiles",
        "title": "Pico-W-Go > Delete all files from board"
      },
      {
        "command": "picowgo.ftp",
        "title": "Pico-W-Go > Start FTP server"
      },
      {
        "command": "picowgo.globalSettings",
        "title": "Pico-W-Go > Global settings"
      },
      {
        "command": "picowgo.reset.soft",
        "title": "Pico-W-Go > Reset > Soft"
      },
      {
        "command": "picowgo.reset.hard",
        "title": "Pico-W-Go > Reset > Hard"
      },
      {
        "command": "picowgo.help",
        "title": "Pico-W-Go > Help > Getting started"
      },
      {
        "command": "picowgo.extra.pins",
        "title": "Pico-W-Go > Help > Show Pico Pin Map"
      },
      {
        "command": "picowgo.extra.getSerial",
        "title": "Pico-W-Go > Help > List serial ports"
      },
      {
        "command": "picowgo.extra.firmwareUpdates",
        "title": "Pico-W-Go > Help > Check for firmware updates"
      },
      {
        "command": "picowgo.listCommands",
        "title": "Pico-W-Go > List all Commands"
      },
      {
        "command": "picowgo.openPicoRemoteWorkspace",
        "title": "Pico-W-Go > Open Pico (W) Remote Workspace"
      }
    ],
    "menus": {
      "explorer/context": [
        {
          "command": "picowgo.upload",
          "group": "picowgo"
        },
        {
          "command": "picowgo.run",
          "group": "picowgo"
        }
      ],
      "editor/context": [
        {
          "command": "picowgo.connect",
          "group": "picowgo"
        },
        {
          "command": "picowgo.run",
          "group": "picowgo"
        },
        {
          "command": "picowgo.runselection",
          "group": "picowgo"
        },
        {
          "command": "picowgo.upload",
          "group": "picowgo"
        }
      ],
      "editor/title": [
        {
          "command": "picowgo.run",
          "group": "picowgo"
        },
        {
          "command": "picowgo.upload",
          "group": "picowgo"
        }
      ]
    },
    "configuration": {
      "title": "Pico-W-Go",
      "properties": {
        "picowgo.autoConnect": {
          "type": "boolean",
          "default": true,
          "title": "Autoconnect on USB",
          "description": "Ignores any 'device address' setting and automatically connects to the top item in the serialport list",
          "order": 2
        },
        "picowgo.manualComDevice": {
          "type": "string",
          "default": "",
          "title": "Manual COM device",
          "description": "If autoConnect is set to false Pico-W-Go will automatically connect to the serial port specified here",
          "order": 3
        },
        "picowgo.syncFolder": {
          "type": "string",
          "default": "",
          "title": "Sync Folder",
          "description": "This folder will be uploaded to the pyboard when using the sync button. Leave empty to sync the complete project. (only allows folders within the project). Use a path relative to the project you opened in vscode, without leading or trailing slash",
          "order": 4
        },
        "picowgo.syncAllFileTypes": {
          "type": "boolean",
          "default": false,
          "title": "Upload all file types",
          "description": "If enabled, all files will be uploaded no matter the file type. The list of file types below will be ignored",
          "order": 5
        },
        "picowgo.syncFileTypes": {
          "type": "string",
          "default": "py,txt,log,json,xml,html,js,css,mpy",
          "title": "Upload file types",
          "description": "All types of files that will be uploaded to the board, seperated by comma. All other filetypes will be ignored during an upload (or download) action",
          "order": 6
        },
        "picowgo.pyIgnore": {
          "title": "Pyignore list",
          "description": "Comma separated list of files and folders to ignore when uploading (no wildcard or regular expressions supported)",
          "type": "array",
          "items": {
            "type": "string"
          },
          "default": [
            ".picowgo",
            ".vscode",
            ".gitignore",
            ".git",
            "project.pico-go",
            "env",
            "venv"
          ],
          "order": 7
        },
        "picowgo.ctrlCOnConnect": {
          "type": "boolean",
          "default": false,
          "title": "Ctrl-c on connect",
          "description": "Stops all running programs when connecting to the board",
          "order": 8
        },
        "picowgo.openOnStart": {
          "type": "boolean",
          "default": false,
          "title": "Open on start",
          "description": "Automatically open the Pico-W-Go console and connect to the board after starting VS Code",
          "order": 9
        },
        "picowgo.statusbarButtons": {
          "type": "array",
          "title": "Statusbar buttons",
          "description": "Select which buttons to show in the statusbar",
          "items": {
            "type": "string"
          },
          "default": [
            "status",
            "run",
            "softreset"
          ],
          "order": 10
        },
        "picowgo.safeBootOnUpload": {
          "type": "boolean",
          "default": false,
          "title": "Safe-boot before upload",
          "description": "[Only works with firmware v1.16.0.b1 and up.] Safe boots the board before uploading to prevent running out of memory while uploading. But adds about 2 seconds to the upload procedure",
          "order": 11
        },
        "picowgo.rebootAfterUpload": {
          "type": "boolean",
          "default": true,
          "title": "Reboot after upload",
          "description": "Reboots your board after any upload or download action",
          "order": 12
        },
        "picowgo.fastUpload": {
          "type": "boolean",
          "default": false,
          "title": "Reboot after upload",
          "description": "Uploads files in bigger chunks. This can speed up the upload process, but can also cause problems with some boards ('memory overflow'). If you experience problems with uploading, try disabling this option",
          "order": 13
        },
        "picowgo.autoconnectComportManufacturers": {
          "title": "Autoconnect comport manufacturers",
          "description": "List of all the comport manufacturers supported for the autoconnect feature. Defaults to all possible manufacturers that pycom boards can return.",
          "type": "array",
          "items": {
            "type": "string"
          },
          "default": [
            "MicroPython",
            "Microsoft"
          ],
          "order": 14
        },
        "picowgo.ftpPassword": {
          "type": "string",
          "default": "pico",
          "title": "FTP Password",
          "description": "Password for FTP authentication. The username is 'pico'.",
          "order": 15
        },
        "picowgo.pythonPath": {
          "type": "string",
          "default": null,
          "title": "Python Path",
          "description": "Path to the Python interpreter. Defaults to null.",
          "order": 16
        }
      }
    }
  },
  "statusBar": [
    {
      "key": "status",
      "name": "",
      "command": "picowgo.toggleConnect",
      "tooltip": "Toggle board connection"
    },
    {
      "key": "stop",
      "name": "$(primitive-square) Stop",
      "command": "picowgo.universalStop",
      "tooltip": "Stop"
    },
    {
      "key": "run",
      "name": "$(play) Run",
      "command": "picowgo.run",
      "tooltip": "Run current file"
    },
    {
      "key": "runselection",
      "name": "$(play) Run Line",
      "command": "picowgo.runselection",
      "tooltip": "Run current line"
    },
    {
      "key": "upload",
      "name": "$(triangle-up) Upload",
      "command": "picowgo.uploadFile",
      "tooltip": "Upload current file to your board"
    },
    {
      "key": "download",
      "name": "$(triangle-down) Download",
      "command": "picowgo.download",
      "tooltip": "Download project from your board"
    },
    {
      "key": "disconnect",
      "name": "$(chrome-close) Disconnect",
      "command": "picowgo.disconnect",
      "tooltip": "Disconnect"
    },
    {
      "key": "softreset",
      "name": "$(refresh) Reset",
      "command": "picowgo.reset.soft",
      "tooltip": "Restart your board"
    },
    {
      "key": "settings",
      "name": "$(gear) Settings",
      "command": "picowgo.globalSettings",
      "tooltip": "Global Pico-W-Go settings"
    },
    {
      "key": "listserial",
      "name": "$(list-unordered) List serialports",
      "command": "picowgo.extra.getSerial",
      "tooltip": "List available serialports"
    },
    {
      "key": "listcommands",
      "name": "$(list-unordered) All commands",
      "command": "picowgo.listCommands",
      "tooltip": "List all available Pico-W-Go commands"
    },
    {
      "key": "ftp",
      "name": "$(references) FTP",
      "command": "picowgo.ftp",
      "tooltip": "Start FTP server"
    }
  ],
  "scripts": {
    "vscode:prepublish": "npm run package",
    "postinstall": "node ./scripts/applyPatches.js",
    "compile": "webpack",
    "watch": "webpack --watch",
    "package": "webpack --mode production --devtool hidden-source-map",
    "compile-tests": "tsc -p . --outDir out",
    "watch-tests": "tsc -p . -w --outDir out",
    "pretest": "npm run compile-tests && npm run compile && npm run lint",
    "lint": "eslint src --ext ts",
    "test": "node ./out/test/runTest.js"
  },
  "devDependencies": {
    "@types/fs-extra": "^9.0.13",
    "@types/glob": "^8.0.0",
    "@types/lodash": "^4.14.185",
    "@types/memorystream": "^0.3.0",
    "@types/mocha": "^9.1.1",
    "@types/node": "^16",
    "@types/node-fetch": "^2.6.2",
    "@types/rimraf": "^3.0.2",
    "@types/semver": "^7.3.12",
    "@types/serialport": "^8.0.2",
    "@types/uuid": "^8.3.4",
    "@types/vscode": "^1.70.0",
    "@typescript-eslint/eslint-plugin": "^5.38.0",
    "@typescript-eslint/parser": "^5.38.0",
    "@vscode/test-electron": "^2.1.5",
    "eslint": "^8.24.0",
    "glob": "^8.0.3",
    "mocha": "^10.0.0",
    "ts-loader": "^9.4.1",
    "typescript": "^4.8.3",
    "webpack": "^5.74.0",
    "webpack-cli": "^4.10.0"
  },
  "dependencies": {
    "async-mutex": "^0.4.0",
    "fs-extra": "^10.1.0",
    "ftp-srv": "^4.6.2",
    "lodash": "^4.17.21",
    "memorystream": "^0.3.1",
    "node-fetch": "^3.2.10",
    "rimraf": "^3.0.2",
    "semver": "^7.3.7",
    "serialport": "^10.4.0",
    "uuid": "^9.0.0"
  }
}
